#!/bin/bash

echo -e "\nHostname is mentioned below:\n$(hostname -f)"

echo -e "\nServer uptime is mentioned below:\n$(uptime)"

echo -e "\nDebian-version:$(cat /etc/debian_version)"

echo -e "\nOS-Language:$(echo $LANG)"

echo -e "\nTotal Memory/Swap Info (in GB's):\n$(free -g | grep -v "buffers" | tr -s " " | cut -f 1,2 -d " ")"

echo -e "\nCPU Cores: $(nproc)"

echo -e "\nDisks Info:\n$(sudo -i fdisk -l | grep Disk | cut -f 1 -d "," | grep -v "Disk identifier")"

pvs=$(sudo -i pvs | grep -v Attr)
if [[ -z "$pvs" ]];then
echo -e "\nThere is no Physical Volume present on this server"
else
echo  -e "\nPVdisplay:\n$(sudo -i pvs)"
fi

vgs=$(sudo -i vgs | grep -v Attr)
if [[ -z "$vgs" ]];then
echo -e "\nThere is no Volume Group present on this server"
else
echo  -e "\nVGdisplay:\n$(sudo -i vgs)"
fi

lvs=$(sudo -i lvs | grep -v Attr)
if [[ -z "$lvs" ]];then
echo -e "\nThere is no Logical Volume present on this server"
else
echo -e "\nLVdisplay:\n$(sudo -i lvs)"
fi

MAPPER=$(ls -l /dev/mapper/ | grep  ^l | tr -s " " | cut -d " " -f 9)
if [[ "$(lsblk | grep -w "crypt" | awk '{print $NF}')" != crypt  ]];then
echo -e "\nLUKS is not configured on this server"
else
for i in $(echo $MAPPER)
do
sudo -i cryptsetup -v status /dev/mapper/$i &>/dev/null && ACTIVE=$(sudo -i cryptsetup -v status /dev/mapper/$i|egrep "active|device"|tr -s " ") && echo -e "\nThe LUKS partition partition is mentioned below:\n$(echo $ACTIVE)"
done
fi

drbd=$(lsmod | grep drbd)
if [[ ! -z "$drbd" ]];then
echo -e "\nDRBD-Info:\n$(sudo -i drbd-overview)"
else
echo -e "\nDRBD is not Installed"
fi

if [[ -f "/etc/ha.d/haresources" ]];then
echo -e "\nHAresources-Info:\n$(cat /etc/ha.d/haresources | grep -v "^$"  | tr '\t' ' ' | tr -s " ")"
else
echo -e "\nHeartbeat is not Installed"
fi

echo -e "\nNTP Server Names Info:\n$(grep server /etc/ntp.conf | grep -v sync)"

if [[ -f "/etc/apt/apt.conf.d/99proxy" ]];then
echo -e "\nProxy Info:\n$(egrep -v "puppet|^$" /etc/apt/apt.conf.d/99proxy)"
else
echo -e "\nproxy is not configured on this server may be 'apt-get' is using resolv.conf directly to download the packages"
fi

if [[ "$(grep nfs /etc/fstab|awk -F ' ' '{print $3}'|grep -v ext* | tr -s "nfs"|head -1)" == nfs  ]];then
echo -e "\nNFS-Share-Info:\n$(df -TH | grep nfs)"
else
echo -e "\nNFS is not available on this server"
fi

facter=$(dpkg -l | grep facter)
dmidecode=$(dpkg -l | grep dmidecode)
if [[ ! -z "$dmidecode" ]];then
echo -e "\nServer is Physical/Virtual Info:\n$(sudo -i dmidecode -s system-product-name | grep -v "#" && sudo -i dmidecode | grep Product)"
elif [[ ! -z "$facter" ]];then
echo -e "\nServer is Physical/Virtual-Info:\n$(facter virtual)"
fi

if [[ -f "/opt/solvedirect/properties/sd-environment.properties" ]];then
echo -e "\nSgProduct-Info:\n$(grep -i product /opt/solvedirect/properties/sd-environment.properties)\n"
else
echo -e "\nOn this server ServiceGrid is not installed\n"
fi

crons="/etc/cron.d/* /etc/cron.weekly/* /etc/cron.hourly/* /etc/cron.monthly/*"
for i in $crons
do
cron=$(/bin/cat $i 2>/dev/null | grep -v "^$")
if [[ ! -z "$cron" ]];then
echo -e "\nContents of cron '$i' file which is present under /etc/cron.d folder:"
echo "$cron"
else
continue
fi
done

echo -e "\nRoutes Info:\n$(ip r)"

dns=$(cat /etc/resolv.conf | tr " " ":")
echo -e "\n/etc/resolv.conf file entries:\n$dns"

echo -e "\nIP Address Info:\n$(/sbin/ip a)"

for i in $(ls /sys/class/net | grep -v bonding)
do
echo -e "\nMac Address of $i:"
cat /sys/class/net/$i/address
done

echo -e "\n/etc/network/interfaces entries:\n$(egrep -v "#|^$" /etc/network/interfaces  | tr '\t' ' ' | tr -s " ")"

if [[ -x "/etc/init.d/sd-all" ]];then
echo -e "\nService sd-all status command's output is mentioned below:\n$(/usr/sbin/service sd-all status)"
else
echo -e "\nsd-all command is not available on this server"
fi

echo  -e "\nFstab file entries:\n$(sudo -i egrep -v "#|^$" /etc/fstab | tr '\t' ' ' | tr -s " ")"

echo -e "\n/etc/hosts file entries:\n$(egrep -v "Generated|^$" /etc/hosts | tr '\t' ' ' | tr -s " ")"

if [[ -x "/opt/servicegrid/bin/showq" ]];then
echo -e "\nShowQ command's output is mentioned below:"
for i in $(/opt/servicegrid/bin/showq | grep -v "Factory" | tr -d ' ')
do
echo "$i"
done
else
echo -e "\nShowQ command is not running on this server"
fi

if [[ -x "/opt/servicegrid/bin/compstat" ]];then
echo -e "\nCompstat Output is mentioned below:\n$(/opt/servicegrid/bin/compstat | egrep -iv "reconfigured|Responses:")"
else
echo -e "\nCompstat command is not installed on this server"
fi

echo -e "\nOpen ports status:\n$(netstat -tulnp)"

echo -e "\nInstalled packages list:\n$(dpkg -l | awk -F ' ' '{print $2,$3}' | tr ' ' ':' | tail -n +6)"
